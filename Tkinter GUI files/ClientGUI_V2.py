#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Sep 27, 2020 03:55:53 PM IDT  platform: Darwin

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import ClientGUI_V2_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    ClientGUI_V2_support.set_Tk_var()
    top = MainGUI (root)
    ClientGUI_V2_support.init(root, top)
    root.mainloop()

w = None
def create_MainGUI(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_MainGUI(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    ClientGUI_V2_support.set_Tk_var()
    top = MainGUI (w)
    ClientGUI_V2_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_MainGUI():
    global w
    w.destroy()
    w = None

class MainGUI:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("880x748+49+107")
        top.minsize(120, 15)
        top.maxsize(1440, 855)
        top.resizable(1, 1)
        top.title("Fish training GUI V2 - Client")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.frmTraining = tk.Frame(top)
        self.frmTraining.place(relx=0.25, rely=0.388, relheight=0.175
                , relwidth=0.743)
        self.frmTraining.configure(relief='groove')
        self.frmTraining.configure(borderwidth="2")
        self.frmTraining.configure(relief="groove")
        self.frmTraining.configure(background="#d9d9d9")
        self.frmTraining.configure(highlightbackground="#d9d9d9")
        self.frmTraining.configure(highlightcolor="black")

        self.btnRunTraining = tk.Button(self.frmTraining)
        self.btnRunTraining.place(relx=0.856, rely=0.076, height=50, width=80)
        self.btnRunTraining.configure(activebackground="#d9d9d9")
        self.btnRunTraining.configure(activeforeground="#000000")
        self.btnRunTraining.configure(background="#d9d9d9")
        self.btnRunTraining.configure(command=ClientGUI_V2_support.onRunTraining)
        self.btnRunTraining.configure(foreground="#000000")
        self.btnRunTraining.configure(highlightbackground="#d9d9d9")
        self.btnRunTraining.configure(highlightcolor="black")
        self.btnRunTraining.configure(pady="0")
        self.btnRunTraining.configure(text='''Run training''')
        self.btnRunTraining.configure(wraplength="50")

        self.Label2 = tk.Label(self.frmTraining)
        self.Label2.place(relx=0.505, rely=0.076, height=24, width=85)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Training day''')

        self.radF1 = tk.Radiobutton(self.frmTraining)
        self.radF1.place(relx=0.566, rely=0.229, relheight=0.183, relwidth=0.089)

        self.radF1.configure(activebackground="#d9d9d9")
        self.radF1.configure(activeforeground="#000000")
        self.radF1.configure(background="#d9d9d9")
        self.radF1.configure(command=ClientGUI_V2_support.R1Sel)
        self.radF1.configure(foreground="#000000")
        self.radF1.configure(highlightbackground="#d9d9d9")
        self.radF1.configure(highlightcolor="black")
        self.radF1.configure(justify='left')
        self.radF1.configure(text='''Feed''')
        self.radF1.configure(value="F")
        self.radF1.configure(variable=ClientGUI_V2_support.FeedVar1)

        self.radN1 = tk.Radiobutton(self.frmTraining)
        self.radN1.place(relx=0.566, rely=0.382, relheight=0.183, relwidth=0.118)

        self.radN1.configure(activebackground="#d9d9d9")
        self.radN1.configure(activeforeground="#000000")
        self.radN1.configure(background="#d9d9d9")
        self.radN1.configure(command=ClientGUI_V2_support.R1Sel)
        self.radN1.configure(foreground="#000000")
        self.radN1.configure(highlightbackground="#d9d9d9")
        self.radN1.configure(highlightcolor="black")
        self.radN1.configure(justify='left')
        self.radN1.configure(text='''No feed''')
        self.radN1.configure(value="NF")
        self.radN1.configure(variable=ClientGUI_V2_support.FeedVar1)

        self.Label1 = tk.Label(self.frmTraining)
        self.Label1.place(relx=0.413, rely=0.076, height=24, width=57)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Fish no.''')

        self.btnStopTraining = tk.Button(self.frmTraining)
        self.btnStopTraining.place(relx=0.856, rely=0.534, height=50, width=80)
        self.btnStopTraining.configure(activebackground="#d9d9d9")
        self.btnStopTraining.configure(activeforeground="#000000")
        self.btnStopTraining.configure(background="#d9d9d9")
        self.btnStopTraining.configure(command=ClientGUI_V2_support.onStopTraining)
        self.btnStopTraining.configure(foreground="#000000")
        self.btnStopTraining.configure(highlightbackground="#d9d9d9")
        self.btnStopTraining.configure(highlightcolor="black")
        self.btnStopTraining.configure(pady="0")
        self.btnStopTraining.configure(text='''Stop training''')
        self.btnStopTraining.configure(wraplength="50")

        self.txtFishNo1 = tk.Text(self.frmTraining)
        self.txtFishNo1.place(relx=0.428, rely=0.305, relheight=0.244
                , relwidth=0.076)
        self.txtFishNo1.configure(background="white")
        self.txtFishNo1.configure(font="TkTextFont")
        self.txtFishNo1.configure(foreground="black")
        self.txtFishNo1.configure(highlightbackground="#d9d9d9")
        self.txtFishNo1.configure(highlightcolor="black")
        self.txtFishNo1.configure(insertbackground="black")
        self.txtFishNo1.configure(selectbackground="#c4c4c4")
        self.txtFishNo1.configure(selectforeground="black")
        self.txtFishNo1.configure(undo="1")
        self.txtFishNo1.configure(wrap="word")

        self.txtTrainingDay1 = tk.Text(self.frmTraining)
        self.txtTrainingDay1.place(relx=0.505, rely=0.305, relheight=0.244
                , relwidth=0.064)
        self.txtTrainingDay1.configure(background="white")
        self.txtTrainingDay1.configure(font="TkTextFont")
        self.txtTrainingDay1.configure(foreground="black")
        self.txtTrainingDay1.configure(highlightbackground="#d9d9d9")
        self.txtTrainingDay1.configure(highlightcolor="black")
        self.txtTrainingDay1.configure(insertbackground="black")
        self.txtTrainingDay1.configure(selectbackground="#c4c4c4")
        self.txtTrainingDay1.configure(selectforeground="black")
        self.txtTrainingDay1.configure(undo="1")
        self.txtTrainingDay1.configure(wrap="word")

        self.txtFishNo2 = tk.Text(self.frmTraining)
        self.txtFishNo2.place(relx=0.428, rely=0.611, relheight=0.244
                , relwidth=0.076)
        self.txtFishNo2.configure(background="white")
        self.txtFishNo2.configure(font="TkTextFont")
        self.txtFishNo2.configure(foreground="black")
        self.txtFishNo2.configure(highlightbackground="#d9d9d9")
        self.txtFishNo2.configure(highlightcolor="black")
        self.txtFishNo2.configure(insertbackground="black")
        self.txtFishNo2.configure(selectbackground="#c4c4c4")
        self.txtFishNo2.configure(selectforeground="black")
        self.txtFishNo2.configure(undo="1")
        self.txtFishNo2.configure(wrap="word")

        self.txtTrainingDay2 = tk.Text(self.frmTraining)
        self.txtTrainingDay2.place(relx=0.505, rely=0.611, relheight=0.244
                , relwidth=0.064)
        self.txtTrainingDay2.configure(background="white")
        self.txtTrainingDay2.configure(font="TkTextFont")
        self.txtTrainingDay2.configure(foreground="black")
        self.txtTrainingDay2.configure(highlightbackground="#d9d9d9")
        self.txtTrainingDay2.configure(highlightcolor="black")
        self.txtTrainingDay2.configure(insertbackground="black")
        self.txtTrainingDay2.configure(selectbackground="#c4c4c4")
        self.txtTrainingDay2.configure(selectforeground="black")
        self.txtTrainingDay2.configure(undo="1")
        self.txtTrainingDay2.configure(wrap="word")

        self.radF2 = tk.Radiobutton(self.frmTraining)
        self.radF2.place(relx=0.566, rely=0.611, relheight=0.183, relwidth=0.089)

        self.radF2.configure(activebackground="#d9d9d9")
        self.radF2.configure(activeforeground="#000000")
        self.radF2.configure(background="#d9d9d9")
        self.radF2.configure(command=ClientGUI_V2_support.R2Sel)
        self.radF2.configure(foreground="#000000")
        self.radF2.configure(highlightbackground="#d9d9d9")
        self.radF2.configure(highlightcolor="black")
        self.radF2.configure(justify='left')
        self.radF2.configure(text='''Feed''')
        self.radF2.configure(value="F")
        self.radF2.configure(variable=ClientGUI_V2_support.FeedVar2)

        self.radN2 = tk.Radiobutton(self.frmTraining)
        self.radN2.place(relx=0.566, rely=0.763, relheight=0.183, relwidth=0.118)

        self.radN2.configure(activebackground="#d9d9d9")
        self.radN2.configure(activeforeground="#000000")
        self.radN2.configure(background="#d9d9d9")
        self.radN2.configure(command=ClientGUI_V2_support.R2Sel)
        self.radN2.configure(foreground="#000000")
        self.radN2.configure(highlightbackground="#d9d9d9")
        self.radN2.configure(highlightcolor="black")
        self.radN2.configure(justify='left')
        self.radN2.configure(text='''No feed''')
        self.radN2.configure(value="NF")
        self.radN2.configure(variable=ClientGUI_V2_support.FeedVar2)

        self.radCam1 = tk.Radiobutton(self.frmTraining)
        self.radCam1.place(relx=0.015, rely=0.076, relheight=0.183
                , relwidth=0.13)
        self.radCam1.configure(activebackground="#d9d9d9")
        self.radCam1.configure(activeforeground="#000000")
        self.radCam1.configure(background="#d9d9d9")
        self.radCam1.configure(command=ClientGUI_V2_support.R1Sel)
        self.radCam1.configure(foreground="#000000")
        self.radCam1.configure(highlightbackground="#d9d9d9")
        self.radCam1.configure(highlightcolor="black")
        self.radCam1.configure(justify='left')
        self.radCam1.configure(text='''Camera 1''')
        self.radCam1.configure(value="0")
        self.radCam1.configure(variable=ClientGUI_V2_support.CamVar1)

        self.fra38_rad41 = tk.Radiobutton(self.frmTraining)
        self.fra38_rad41.place(relx=0.0, rely=0.0, relheight=0.008
                , relwidth=0.002)
        self.fra38_rad41.configure(activebackground="#d9d9d9")
        self.fra38_rad41.configure(activeforeground="#000000")
        self.fra38_rad41.configure(background="#d9d9d9")
        self.fra38_rad41.configure(command=ClientGUI_V2_support.R1Sel)
        self.fra38_rad41.configure(foreground="#000000")
        self.fra38_rad41.configure(highlightbackground="#d9d9d9")
        self.fra38_rad41.configure(highlightcolor="black")
        self.fra38_rad41.configure(justify='left')
        self.fra38_rad41.configure(text='''Feed''')
        self.fra38_rad41.configure(value="F")
        self.fra38_rad41.configure(variable=ClientGUI_V2_support.FeedVar1)

        self.fra38_rad42 = tk.Radiobutton(self.frmTraining)
        self.fra38_rad42.place(relx=0.0, rely=0.0, relheight=0.008
                , relwidth=0.002)
        self.fra38_rad42.configure(activebackground="#d9d9d9")
        self.fra38_rad42.configure(activeforeground="#000000")
        self.fra38_rad42.configure(background="#d9d9d9")
        self.fra38_rad42.configure(command=ClientGUI_V2_support.R1Sel)
        self.fra38_rad42.configure(foreground="#000000")
        self.fra38_rad42.configure(highlightbackground="#d9d9d9")
        self.fra38_rad42.configure(highlightcolor="black")
        self.fra38_rad42.configure(justify='left')
        self.fra38_rad42.configure(text='''Feed''')
        self.fra38_rad42.configure(value="F")
        self.fra38_rad42.configure(variable=ClientGUI_V2_support.FeedVar1)

        self.radCam2 = tk.Radiobutton(self.frmTraining)
        self.radCam2.place(relx=0.015, rely=0.229, relheight=0.183
                , relwidth=0.133)
        self.radCam2.configure(activebackground="#d9d9d9")
        self.radCam2.configure(activeforeground="#000000")
        self.radCam2.configure(background="#d9d9d9")
        self.radCam2.configure(command=ClientGUI_V2_support.R1Sel)
        self.radCam2.configure(foreground="#000000")
        self.radCam2.configure(highlightbackground="#d9d9d9")
        self.radCam2.configure(highlightcolor="black")
        self.radCam2.configure(justify='left')
        self.radCam2.configure(text='''Camera 2''')
        self.radCam2.configure(value="1")
        self.radCam2.configure(variable=ClientGUI_V2_support.CamVar1)

        self.btnTankConf = tk.Button(self.frmTraining)
        self.btnTankConf.place(relx=0.015, rely=0.458, height=62, width=93)
        self.btnTankConf.configure(activebackground="#d9d9d9")
        self.btnTankConf.configure(activeforeground="#000000")
        self.btnTankConf.configure(background="#d9d9d9")
        self.btnTankConf.configure(command=ClientGUI_V2_support.onTankConfig)
        self.btnTankConf.configure(foreground="#000000")
        self.btnTankConf.configure(highlightbackground="#d9d9d9")
        self.btnTankConf.configure(highlightcolor="black")
        self.btnTankConf.configure(pady="0")
        self.btnTankConf.configure(text='''Tank conf.''')

        self.radF1_3 = tk.Radiobutton(self.frmTraining)
        self.radF1_3.place(relx=0.183, rely=0.687, relheight=0.168
                , relwidth=0.121)
        self.radF1_3.configure(activebackground="#d9d9d9")
        self.radF1_3.configure(activeforeground="#000000")
        self.radF1_3.configure(background="#d9d9d9")
        self.radF1_3.configure(command=ClientGUI_V2_support.R3Sel)
        self.radF1_3.configure(foreground="#000000")
        self.radF1_3.configure(highlightbackground="#d9d9d9")
        self.radF1_3.configure(highlightcolor="black")
        self.radF1_3.configure(justify='left')
        self.radF1_3.configure(text='''Center''')
        self.radF1_3.configure(value="C")
        self.radF1_3.configure(variable=ClientGUI_V2_support.TrainingVar)

        self.radF1_1 = tk.Radiobutton(self.frmTraining)
        self.radF1_1.place(relx=0.183, rely=0.305, relheight=0.168
                , relwidth=0.182)
        self.radF1_1.configure(activebackground="#d9d9d9")
        self.radF1_1.configure(activeforeground="#000000")
        self.radF1_1.configure(background="#d9d9d9")
        self.radF1_1.configure(command=ClientGUI_V2_support.R3Sel)
        self.radF1_1.configure(foreground="#000000")
        self.radF1_1.configure(highlightbackground="#d9d9d9")
        self.radF1_1.configure(highlightcolor="black")
        self.radF1_1.configure(justify='left')
        self.radF1_1.configure(text='''Edge - Sides''')
        self.radF1_1.configure(value="ES")
        self.radF1_1.configure(variable=ClientGUI_V2_support.TrainingVar)

        self.Label5 = tk.Label(self.frmTraining)
        self.Label5.place(relx=0.183, rely=0.076, height=22, width=86)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''Training type''')

        self.Label6 = tk.Label(self.frmTraining)
        self.Label6.place(relx=0.398, rely=0.305, height=24, width=19)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''1''')

        self.Label10 = tk.Label(self.frmTraining)
        self.Label10.place(relx=0.398, rely=0.611, height=24, width=19)
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(activeforeground="black")
        self.Label10.configure(background="#d9d9d9")
        self.Label10.configure(foreground="#000000")
        self.Label10.configure(highlightbackground="#d9d9d9")
        self.Label10.configure(highlightcolor="black")
        self.Label10.configure(text='''2''')

        self.TSeparator1 = ttk.Separator(self.frmTraining)
        self.TSeparator1.place(relx=0.171, rely=0.092, relheight=0.763)
        self.TSeparator1.configure(orient="vertical")

        self.TSeparator2 = ttk.Separator(self.frmTraining)
        self.TSeparator2.place(relx=0.402, rely=0.107, relheight=0.74)
        self.TSeparator2.configure(orient="vertical")

        self.Label15 = tk.Label(self.frmTraining)
        self.Label15.place(relx=0.703, rely=0.076, height=22, width=89)
        self.Label15.configure(activebackground="#f9f9f9")
        self.Label15.configure(activeforeground="black")
        self.Label15.configure(background="#d9d9d9")
        self.Label15.configure(foreground="#000000")
        self.Label15.configure(highlightbackground="#d9d9d9")
        self.Label15.configure(highlightcolor="black")
        self.Label15.configure(text='''Training time:''')

        self.chbtn_StopTraining = tk.Checkbutton(self.frmTraining)
        self.chbtn_StopTraining.place(relx=0.703, rely=0.229, relheight=0.183
                , relwidth=0.136)
        self.chbtn_StopTraining.configure(activebackground="#d9d9d9")
        self.chbtn_StopTraining.configure(activeforeground="#000000")
        self.chbtn_StopTraining.configure(background="#d9d9d9")
        self.chbtn_StopTraining.configure(command=ClientGUI_V2_support.OnChkStopTraining)
        self.chbtn_StopTraining.configure(foreground="#000000")
        self.chbtn_StopTraining.configure(highlightbackground="#d9d9d9")
        self.chbtn_StopTraining.configure(highlightcolor="black")
        self.chbtn_StopTraining.configure(justify='left')
        self.chbtn_StopTraining.configure(text='''Stop after''')
        self.chbtn_StopTraining.configure(variable=ClientGUI_V2_support.chVar_stop_tr)

        self.TSeparator4 = ttk.Separator(self.frmTraining)
        self.TSeparator4.place(relx=0.671, rely=0.122, relheight=0.718)
        self.TSeparator4.configure(orient="vertical")

        self.TSeparator5 = ttk.Separator(self.frmTraining)
        self.TSeparator5.place(relx=0.844, rely=0.092, relheight=0.763)
        self.TSeparator5.configure(orient="vertical")

        self.txtTrainingStop = tk.Entry(self.frmTraining)
        self.txtTrainingStop.place(relx=0.688, rely=0.626, height=27
                , relwidth=0.141)
        self.txtTrainingStop.configure(background="white")
        self.txtTrainingStop.configure(font="TkFixedFont")
        self.txtTrainingStop.configure(foreground="#000000")
        self.txtTrainingStop.configure(highlightbackground="#d9d9d9")
        self.txtTrainingStop.configure(highlightcolor="black")
        self.txtTrainingStop.configure(insertbackground="black")
        self.txtTrainingStop.configure(justify='center')
        self.txtTrainingStop.configure(selectbackground="#c4c4c4")
        self.txtTrainingStop.configure(selectforeground="black")
        self.txtTrainingStop.configure(textvariable=ClientGUI_V2_support.txtTrainingStop)

        self.Label17 = tk.Label(self.frmTraining)
        self.Label17.place(relx=0.703, rely=0.382, height=34, width=66)
        self.Label17.configure(activebackground="#f9f9f9")
        self.Label17.configure(activeforeground="black")
        self.Label17.configure(background="#d9d9d9")
        self.Label17.configure(font="self.myFont_small")
        self.Label17.configure(foreground="#000000")
        self.Label17.configure(highlightbackground="#d9d9d9")
        self.Label17.configure(highlightcolor="black")
        self.Label17.configure(text='''format- 00:00:00''')
        self.Label17.configure(wraplength="60")

        self.radF1_2 = tk.Radiobutton(self.frmTraining)
        self.radF1_2.place(relx=0.183, rely=0.458, relheight=0.168
                , relwidth=0.197)
        self.radF1_2.configure(activebackground="#d9d9d9")
        self.radF1_2.configure(activeforeground="#000000")
        self.radF1_2.configure(background="#d9d9d9")
        self.radF1_2.configure(command=ClientGUI_V2_support.R3Sel)
        self.radF1_2.configure(foreground="#000000")
        self.radF1_2.configure(highlightbackground="#d9d9d9")
        self.radF1_2.configure(highlightcolor="black")
        self.radF1_2.configure(justify='left')
        self.radF1_2.configure(text='''Edge - Vertical''')
        self.radF1_2.configure(value="EV")
        self.radF1_2.configure(variable=ClientGUI_V2_support.TrainingVar)

        self.btnExit = tk.Button(top)
        self.btnExit.place(relx=0.784, rely=0.936, height=40, width=177)
        self.btnExit.configure(activebackground="#d9d9d9")
        self.btnExit.configure(activeforeground="#000000")
        self.btnExit.configure(background="#d9d9d9")
        self.btnExit.configure(command=ClientGUI_V2_support.onExit)
        self.btnExit.configure(foreground="#000000")
        self.btnExit.configure(highlightbackground="#d9d9d9")
        self.btnExit.configure(highlightcolor="black")
        self.btnExit.configure(pady="0")
        self.btnExit.configure(text='''Exit''')

        self.frmStat = tk.Frame(top)
        self.frmStat.place(relx=0.011, rely=0.013, relheight=0.361
                , relwidth=0.983)
        self.frmStat.configure(relief='groove')
        self.frmStat.configure(borderwidth="2")
        self.frmStat.configure(relief="groove")
        self.frmStat.configure(background="#d9d9d9")
        self.frmStat.configure(highlightbackground="#d9d9d9")
        self.frmStat.configure(highlightcolor="black")

        self.Label3 = tk.Label(self.frmStat)
        self.Label3.place(relx=0.009, rely=0.03, height=22, width=90)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Fish statistics''')

        self.btnStatClear = tk.Button(self.frmStat)
        self.btnStatClear.place(relx=0.009, rely=0.848, height=30, width=62)
        self.btnStatClear.configure(activebackground="#d9d9d9")
        self.btnStatClear.configure(activeforeground="#000000")
        self.btnStatClear.configure(background="#d9d9d9")
        self.btnStatClear.configure(command=ClientGUI_V2_support.onStatClear)
        self.btnStatClear.configure(foreground="#000000")
        self.btnStatClear.configure(highlightbackground="#d9d9d9")
        self.btnStatClear.configure(highlightcolor="black")
        self.btnStatClear.configure(pady="0")
        self.btnStatClear.configure(text='''Clear''')

        self.btnDB_refresh = tk.Button(self.frmStat)
        self.btnDB_refresh.place(relx=0.543, rely=0.815, height=38, width=141)
        self.btnDB_refresh.configure(activebackground="#d9d9d9")
        self.btnDB_refresh.configure(activeforeground="#000000")
        self.btnDB_refresh.configure(background="#d9d9d9")
        self.btnDB_refresh.configure(command=ClientGUI_V2_support.OnRefresh)
        self.btnDB_refresh.configure(foreground="#000000")
        self.btnDB_refresh.configure(highlightbackground="#d9d9d9")
        self.btnDB_refresh.configure(highlightcolor="black")
        self.btnDB_refresh.configure(pady="0")
        self.btnDB_refresh.configure(text='''Refresh''')

        self.Label9 = tk.Label(self.frmStat)
        self.Label9.place(relx=0.15, rely=0.037, height=24, width=89)
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(activeforeground="black")
        self.Label9.configure(background="#d9d9d9")
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(highlightbackground="#d9d9d9")
        self.Label9.configure(highlightcolor="black")
        self.Label9.configure(text='''Main folder:''')

        self.Label11 = tk.Label(self.frmStat)
        self.Label11.place(relx=0.116, rely=0.889, height=24, width=77)
        self.Label11.configure(activebackground="#f9f9f9")
        self.Label11.configure(activeforeground="black")
        self.Label11.configure(background="#d9d9d9")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(highlightbackground="#d9d9d9")
        self.Label11.configure(highlightcolor="black")
        self.Label11.configure(text='''Days back''')

        self.txtStatDaysBack = tk.Text(self.frmStat)
        self.txtStatDaysBack.place(relx=0.208, rely=0.889, relheight=0.089
                , relwidth=0.076)
        self.txtStatDaysBack.configure(background="white")
        self.txtStatDaysBack.configure(font="TkTextFont")
        self.txtStatDaysBack.configure(foreground="black")
        self.txtStatDaysBack.configure(highlightbackground="#d9d9d9")
        self.txtStatDaysBack.configure(highlightcolor="black")
        self.txtStatDaysBack.configure(insertbackground="black")
        self.txtStatDaysBack.configure(selectbackground="#c4c4c4")
        self.txtStatDaysBack.configure(selectforeground="black")
        self.txtStatDaysBack.configure(undo="1")
        self.txtStatDaysBack.configure(wrap="word")

        self.txtMainFolder = tk.Text(self.frmStat)
        self.txtMainFolder.place(relx=0.254, rely=0.037, relheight=0.089
                , relwidth=0.731)
        self.txtMainFolder.configure(background="white")
        self.txtMainFolder.configure(font="TkTextFont")
        self.txtMainFolder.configure(foreground="black")
        self.txtMainFolder.configure(highlightbackground="#d9d9d9")
        self.txtMainFolder.configure(highlightcolor="black")
        self.txtMainFolder.configure(insertbackground="black")
        self.txtMainFolder.configure(selectbackground="#c4c4c4")
        self.txtMainFolder.configure(selectforeground="black")
        self.txtMainFolder.configure(undo="1")
        self.txtMainFolder.configure(wrap="word")

        self.Frame1 = tk.Frame(self.frmStat)
        self.Frame1.place(relx=0.012, rely=0.148, relheight=0.648
                , relwidth=0.711)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.style.configure('Treeview',  font="TkDefaultFont")
        self.DB = ScrolledTreeView(self.Frame1)
        self.DB.place(relx=0.016, rely=0.057, relheight=0.874, relwidth=0.976)
        self.DB.configure(columns="Col1")
        # build_treeview_support starting.
        self.DB.heading("#0",text="Tree")
        self.DB.heading("#0",anchor="center")
        self.DB.column("#0",width="295")
        self.DB.column("#0",minwidth="20")
        self.DB.column("#0",stretch="1")
        self.DB.column("#0",anchor="w")
        self.DB.heading("Col1",text="Col1")
        self.DB.heading("Col1",anchor="center")
        self.DB.column("Col1",width="295")
        self.DB.column("Col1",minwidth="20")
        self.DB.column("Col1",stretch="1")
        self.DB.column("Col1",anchor="w")

        self.Label13 = tk.Label(self.frmStat)
        self.Label13.place(relx=0.74, rely=0.178, height=24, width=76)
        self.Label13.configure(activebackground="#f9f9f9")
        self.Label13.configure(activeforeground="black")
        self.Label13.configure(background="#d9d9d9")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(highlightbackground="#d9d9d9")
        self.Label13.configure(highlightcolor="black")
        self.Label13.configure(text='''Log folder''')

        self.Label16 = tk.Label(self.frmStat)
        self.Label16.place(relx=0.74, rely=0.426, height=24, width=95)
        self.Label16.configure(activebackground="#f9f9f9")
        self.Label16.configure(activeforeground="black")
        self.Label16.configure(background="#d9d9d9")
        self.Label16.configure(foreground="#000000")
        self.Label16.configure(highlightbackground="#d9d9d9")
        self.Label16.configure(highlightcolor="black")
        self.Label16.configure(text='''Database file''')

        self.txtLogFolder = tk.Text(self.frmStat)
        self.txtLogFolder.place(relx=0.74, rely=0.259, relheight=0.093
                , relwidth=0.249)
        self.txtLogFolder.configure(background="white")
        self.txtLogFolder.configure(font="TkTextFont")
        self.txtLogFolder.configure(foreground="black")
        self.txtLogFolder.configure(highlightbackground="#d9d9d9")
        self.txtLogFolder.configure(highlightcolor="black")
        self.txtLogFolder.configure(insertbackground="black")
        self.txtLogFolder.configure(selectbackground="#c4c4c4")
        self.txtLogFolder.configure(selectforeground="black")
        self.txtLogFolder.configure(wrap="word")

        self.txtDBfile = tk.Text(self.frmStat)
        self.txtDBfile.place(relx=0.74, rely=0.5, relheight=0.093
                , relwidth=0.249)
        self.txtDBfile.configure(background="white")
        self.txtDBfile.configure(font="TkTextFont")
        self.txtDBfile.configure(foreground="black")
        self.txtDBfile.configure(highlightbackground="#d9d9d9")
        self.txtDBfile.configure(highlightcolor="black")
        self.txtDBfile.configure(insertbackground="black")
        self.txtDBfile.configure(selectbackground="#c4c4c4")
        self.txtDBfile.configure(selectforeground="black")
        self.txtDBfile.configure(wrap="word")

        self.Label12 = tk.Label(self.frmStat)
        self.Label12.place(relx=0.104, rely=0.815, height=22, width=37)
        self.Label12.configure(activebackground="#f9f9f9")
        self.Label12.configure(activeforeground="black")
        self.Label12.configure(background="#d9d9d9")
        self.Label12.configure(foreground="#000000")
        self.Label12.configure(highlightbackground="#d9d9d9")
        self.Label12.configure(highlightcolor="black")
        self.Label12.configure(text='''Filter''')

        self.btnOpenLogFolder = tk.Button(self.frmStat)
        self.btnOpenLogFolder.place(relx=0.913, rely=0.352, height=32, width=52)
        self.btnOpenLogFolder.configure(activebackground="#d9d9d9")
        self.btnOpenLogFolder.configure(activeforeground="#000000")
        self.btnOpenLogFolder.configure(background="#d9d9d9")
        self.btnOpenLogFolder.configure(command=ClientGUI_V2_support.onOpenFolder)
        self.btnOpenLogFolder.configure(foreground="#000000")
        self.btnOpenLogFolder.configure(highlightbackground="#d9d9d9")
        self.btnOpenLogFolder.configure(highlightcolor="black")
        self.btnOpenLogFolder.configure(relief="raised")
        self.btnOpenLogFolder.configure(text='''Open''')

        self.btnShowDBfile = tk.Button(self.frmStat)
        self.btnShowDBfile.place(relx=0.913, rely=0.593, height=32, width=52)
        self.btnShowDBfile.configure(activebackground="#d9d9d9")
        self.btnShowDBfile.configure(activeforeground="#000000")
        self.btnShowDBfile.configure(background="#d9d9d9")
        self.btnShowDBfile.configure(command=ClientGUI_V2_support.onShowDBFile)
        self.btnShowDBfile.configure(foreground="#000000")
        self.btnShowDBfile.configure(highlightbackground="#d9d9d9")
        self.btnShowDBfile.configure(highlightcolor="black")
        self.btnShowDBfile.configure(relief="raised")
        self.btnShowDBfile.configure(text='''Show''')

        self.TSeparator3 = ttk.Separator(self.frmStat)
        self.TSeparator3.place(relx=0.728, rely=0.148, relheight=0.778)
        self.TSeparator3.configure(orient="vertical")

        self.txtConfigFile = tk.Text(self.frmStat)
        self.txtConfigFile.place(relx=0.74, rely=0.741, relheight=0.093
                , relwidth=0.249)
        self.txtConfigFile.configure(background="white")
        self.txtConfigFile.configure(font="TkTextFont")
        self.txtConfigFile.configure(foreground="black")
        self.txtConfigFile.configure(highlightbackground="#d9d9d9")
        self.txtConfigFile.configure(highlightcolor="black")
        self.txtConfigFile.configure(insertbackground="black")
        self.txtConfigFile.configure(selectbackground="#c4c4c4")
        self.txtConfigFile.configure(selectforeground="black")
        self.txtConfigFile.configure(wrap="word")

        self.btnShowConfig = tk.Button(self.frmStat)
        self.btnShowConfig.place(relx=0.913, rely=0.833, height=32, width=52)
        self.btnShowConfig.configure(activebackground="#d9d9d9")
        self.btnShowConfig.configure(activeforeground="#000000")
        self.btnShowConfig.configure(background="#d9d9d9")
        self.btnShowConfig.configure(command=ClientGUI_V2_support.onShowConfigFile)
        self.btnShowConfig.configure(foreground="#000000")
        self.btnShowConfig.configure(highlightbackground="#d9d9d9")
        self.btnShowConfig.configure(highlightcolor="black")
        self.btnShowConfig.configure(text='''Show''')

        self.Label18 = tk.Label(self.frmStat)
        self.Label18.place(relx=0.74, rely=0.659, height=24, width=72)
        self.Label18.configure(activebackground="#f9f9f9")
        self.Label18.configure(activeforeground="black")
        self.Label18.configure(background="#d9d9d9")
        self.Label18.configure(foreground="#000000")
        self.Label18.configure(highlightbackground="#d9d9d9")
        self.Label18.configure(highlightcolor="black")
        self.Label18.configure(text='''Config file''')

        self.frmCom = tk.Frame(top)
        self.frmCom.place(relx=0.011, rely=0.388, relheight=0.175
                , relwidth=0.232)
        self.frmCom.configure(relief='groove')
        self.frmCom.configure(borderwidth="2")
        self.frmCom.configure(relief="groove")
        self.frmCom.configure(background="#d9d9d9")
        self.frmCom.configure(highlightbackground="#d9d9d9")
        self.frmCom.configure(highlightcolor="black")

        self.Label4 = tk.Label(self.frmCom)
        self.Label4.place(relx=0.039, rely=0.061, height=22, width=69)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Motor test''')

        self.btnMotor1L = tk.Button(self.frmCom)
        self.btnMotor1L.place(relx=0.588, rely=0.153, height=48, width=37)
        self.btnMotor1L.configure(activebackground="#d9d9d9")
        self.btnMotor1L.configure(activeforeground="#000000")
        self.btnMotor1L.configure(background="#d9d9d9")
        self.btnMotor1L.configure(command=ClientGUI_V2_support.on1L)
        self.btnMotor1L.configure(foreground="#000000")
        self.btnMotor1L.configure(highlightbackground="#d9d9d9")
        self.btnMotor1L.configure(highlightcolor="black")
        self.btnMotor1L.configure(pady="0")
        self.btnMotor1L.configure(text='''(1)L''')

        self.btnMotor1R = tk.Button(self.frmCom)
        self.btnMotor1R.place(relx=0.588, rely=0.534, height=48, width=37)
        self.btnMotor1R.configure(activebackground="#d9d9d9")
        self.btnMotor1R.configure(activeforeground="#000000")
        self.btnMotor1R.configure(background="#d9d9d9")
        self.btnMotor1R.configure(command=ClientGUI_V2_support.on1R)
        self.btnMotor1R.configure(foreground="#000000")
        self.btnMotor1R.configure(highlightbackground="#d9d9d9")
        self.btnMotor1R.configure(highlightcolor="black")
        self.btnMotor1R.configure(pady="0")
        self.btnMotor1R.configure(text='''(1)R''')

        self.btnMotor2R = tk.Button(self.frmCom)
        self.btnMotor2R.place(relx=0.784, rely=0.534, height=48, width=37)
        self.btnMotor2R.configure(activebackground="#d9d9d9")
        self.btnMotor2R.configure(activeforeground="#000000")
        self.btnMotor2R.configure(background="#d9d9d9")
        self.btnMotor2R.configure(command=ClientGUI_V2_support.on2R)
        self.btnMotor2R.configure(foreground="#000000")
        self.btnMotor2R.configure(highlightbackground="#d9d9d9")
        self.btnMotor2R.configure(highlightcolor="black")
        self.btnMotor2R.configure(pady="0")
        self.btnMotor2R.configure(text='''(2)R''')

        self.btnMotor2L = tk.Button(self.frmCom)
        self.btnMotor2L.place(relx=0.784, rely=0.153, height=48, width=37)
        self.btnMotor2L.configure(activebackground="#d9d9d9")
        self.btnMotor2L.configure(activeforeground="#000000")
        self.btnMotor2L.configure(background="#d9d9d9")
        self.btnMotor2L.configure(command=ClientGUI_V2_support.on2L)
        self.btnMotor2L.configure(foreground="#000000")
        self.btnMotor2L.configure(highlightbackground="#d9d9d9")
        self.btnMotor2L.configure(highlightcolor="black")
        self.btnMotor2L.configure(pady="0")
        self.btnMotor2L.configure(text='''(2)L''')

        self.Label7 = tk.Label(self.frmCom)
        self.Label7.place(relx=0.049, rely=0.229, height=21, width=99)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''Steps number''')

        self.txtStepNum = tk.Entry(self.frmCom)
        self.txtStepNum.place(relx=0.049, rely=0.382,height=27, relwidth=0.392)
        self.txtStepNum.configure(background="white")
        self.txtStepNum.configure(font="TkFixedFont")
        self.txtStepNum.configure(foreground="#000000")
        self.txtStepNum.configure(highlightbackground="#d9d9d9")
        self.txtStepNum.configure(highlightcolor="black")
        self.txtStepNum.configure(insertbackground="black")
        self.txtStepNum.configure(selectbackground="#c4c4c4")
        self.txtStepNum.configure(selectforeground="black")

        self.btnSetZero = tk.Button(self.frmCom)
        self.btnSetZero.place(relx=0.049, rely=0.611, height=38, width=107)
        self.btnSetZero.configure(activebackground="#d9d9d9")
        self.btnSetZero.configure(activeforeground="#000000")
        self.btnSetZero.configure(background="#d9d9d9")
        self.btnSetZero.configure(command=ClientGUI_V2_support.onSetZero)
        self.btnSetZero.configure(foreground="#000000")
        self.btnSetZero.configure(highlightbackground="#d9d9d9")
        self.btnSetZero.configure(highlightcolor="black")
        self.btnSetZero.configure(pady="0")
        self.btnSetZero.configure(text='''Set ZERO pos.''')

        self.frmLog = tk.Frame(top)
        self.frmLog.place(relx=0.011, rely=0.575, relheight=0.354
                , relwidth=0.983)
        self.frmLog.configure(relief='groove')
        self.frmLog.configure(borderwidth="2")
        self.frmLog.configure(relief="groove")
        self.frmLog.configure(background="#d9d9d9")
        self.frmLog.configure(highlightbackground="#d9d9d9")
        self.frmLog.configure(highlightcolor="black")

        self.Label8 = tk.Label(self.frmLog)
        self.Label8.place(relx=0.009, rely=0.03, height=22, width=29)
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="black")
        self.Label8.configure(text='''Log''')

        self.txtMainLog = tk.Text(self.frmLog)
        self.txtMainLog.place(relx=0.009, rely=0.121, relheight=0.777
                , relwidth=0.985)
        self.txtMainLog.configure(background="white")
        self.txtMainLog.configure(font="TkTextFont")
        self.txtMainLog.configure(foreground="black")
        self.txtMainLog.configure(highlightbackground="#d9d9d9")
        self.txtMainLog.configure(highlightcolor="black")
        self.txtMainLog.configure(insertbackground="black")
        self.txtMainLog.configure(selectbackground="#c4c4c4")
        self.txtMainLog.configure(selectforeground="black")
        self.txtMainLog.configure(undo="1")
        self.txtMainLog.configure(wrap="word")

        self.frmLogClear = tk.Button(self.frmLog)
        self.frmLogClear.place(relx=0.012, rely=0.906, height=22, width=70)
        self.frmLogClear.configure(activebackground="#d9d9d9")
        self.frmLogClear.configure(activeforeground="#000000")
        self.frmLogClear.configure(background="#d9d9d9")
        self.frmLogClear.configure(command=ClientGUI_V2_support.onLogClear)
        self.frmLogClear.configure(foreground="#000000")
        self.frmLogClear.configure(highlightbackground="#d9d9d9")
        self.frmLogClear.configure(highlightcolor="black")
        self.frmLogClear.configure(pady="0")
        self.frmLogClear.configure(text='''Clear''')

        self.Label14 = tk.Label(self.frmLog)
        self.Label14.place(relx=0.532, rely=0.03, height=24, width=91)
        self.Label14.configure(activebackground="#f9f9f9")
        self.Label14.configure(activeforeground="black")
        self.Label14.configure(background="#d9d9d9")
        self.Label14.configure(foreground="#000000")
        self.Label14.configure(highlightbackground="#d9d9d9")
        self.Label14.configure(highlightcolor="black")
        self.Label14.configure(text='''Time runing:''')

        self.lblTimeCount = tk.Label(self.frmLog)
        self.lblTimeCount.place(relx=0.647, rely=0.03, height=24, width=211)
        self.lblTimeCount.configure(activebackground="#f9f9f9")
        self.lblTimeCount.configure(activeforeground="black")
        self.lblTimeCount.configure(background="#d9d9d9")
        self.lblTimeCount.configure(font="TkTextFont")
        self.lblTimeCount.configure(foreground="#0000fe")
        self.lblTimeCount.configure(highlightbackground="#d9d9d9")
        self.lblTimeCount.configure(highlightcolor="black")
        self.lblTimeCount.configure(justify='left')
        self.lblTimeCount.configure(text='''00:00''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''
    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))
        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')
        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)
        # Copy geometry methods of master  (taken from ScrolledText.py)
        if py3:
            methods = tk.Pack.__dict__.keys() | tk.Grid.__dict__.keys() \
                  | tk.Place.__dict__.keys()
        else:
            methods = tk.Pack.__dict__.keys() + tk.Grid.__dict__.keys() \
                  + tk.Place.__dict__.keys()
        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        container.bind('<Enter>', lambda e: _bound_to_mousewheel(e, container))
        container.bind('<Leave>', lambda e: _unbound_to_mousewheel(e, container))
        return func(cls, container, **kw)
    return wrapped

class ScrolledTreeView(AutoScroll, ttk.Treeview):
    '''A standard ttk Treeview widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        ttk.Treeview.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

import platform
def _bound_to_mousewheel(event, widget):
    child = widget.winfo_children()[0]
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        child.bind_all('<MouseWheel>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-MouseWheel>', lambda e: _on_shiftmouse(e, child))
    else:
        child.bind_all('<Button-4>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Button-5>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-Button-4>', lambda e: _on_shiftmouse(e, child))
        child.bind_all('<Shift-Button-5>', lambda e: _on_shiftmouse(e, child))

def _unbound_to_mousewheel(event, widget):
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        widget.unbind_all('<MouseWheel>')
        widget.unbind_all('<Shift-MouseWheel>')
    else:
        widget.unbind_all('<Button-4>')
        widget.unbind_all('<Button-5>')
        widget.unbind_all('<Shift-Button-4>')
        widget.unbind_all('<Shift-Button-5>')

def _on_mousewheel(event, widget):
    if platform.system() == 'Windows':
        widget.yview_scroll(-1*int(event.delta/120),'units')
    elif platform.system() == 'Darwin':
        widget.yview_scroll(-1*int(event.delta),'units')
    else:
        if event.num == 4:
            widget.yview_scroll(-1, 'units')
        elif event.num == 5:
            widget.yview_scroll(1, 'units')

def _on_shiftmouse(event, widget):
    if platform.system() == 'Windows':
        widget.xview_scroll(-1*int(event.delta/120), 'units')
    elif platform.system() == 'Darwin':
        widget.xview_scroll(-1*int(event.delta), 'units')
    else:
        if event.num == 4:
            widget.xview_scroll(-1, 'units')
        elif event.num == 5:
            widget.xview_scroll(1, 'units')

if __name__ == '__main__':
    vp_start_gui()





